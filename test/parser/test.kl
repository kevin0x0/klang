let a = 2 + 2 * 2 + 1;

return callvararg(f, 1, 2, 3, 4, [ x | x in ... ]);

let makecfg = usercfg -> usercfg.fallback(defaultconfig);

let mycfg = makecfg({ curl = "~", zerocurl = "^", tabstop = 8 });
(a1, a2) -> 3;
let abs = a -> a >= 0 and a or -a;
mycfg.abs = abs;

let m = method -> print "AAA";
let class = { say = m };
class.say();

let f = n -> n <+ 1 and n or f(n - 1) + f(n - 2) where let a = 1;

let Window = inherit {} : {
  local width;
  local height;
  local pos_x;
  local pos_y;
  constructor = method(width, height) => {
    this.width = width;
    this.height = height;
  };
  moveto = method(posx, posy) => {
    this.pos_x = posx;
    this.pos_y = posy;
  };
};


let a = foo(x, x + 1) where {
  let x = bar(4);
  let y = 4;
};

let [a, b, [c, d]] = getarray(0, 100);

let a << 3, 4, [(last_inner_left, _)] = expr;

with = (obj, func) => {
  func(obj);
  obj.close();
};

(a, b) -> a + b;

with = obj -> func -> (func(), obj.close());

let f = ((a, b)) => (p, q);

f ();

let f = n -> n + 1;

f.'+' = method rop -> n -> this n + rop;

let g = f + 1;


let [a, b], [1, 3, { name = name }] = foo(3);

let class = {
  local name;
  local age;
  local gender;
};
